{{> includes/hero hero-title="Exam Result"}}
<div class="container__cstm">

  <h3>
    Exam Result
  </h3>

  <div id="exam">

    <form id="">
      {{#if exam.examBasic }}
      <div class="card py-3 px-5 mb-4">
        <h3 class="mb-3 exam-qns" style="color:#2073D4;">
          Blockchasin Basic Result
        </h3>
        <ul>
          <li style="display: flex;flex-direction:column">
            <strong><span>Attempts:</span></strong> {{{total}}}
            <strong><span>marks:</span></strong> {{{obtainedMarks}}}
            <strong><span>Percent:</span></strong> {{{percent}}} %
            <strong><span>Certificate Hash:</span></strong> {{{certificateHash}}}
            {{#if examStatus}}
            <strong><span>Exam Status:</span></strong> <span class="greenText"><strong>Pass</strong></span>

            <div>
              <button type="button" onclick="downloadImage()">Download</button>
            </div>
            <div class="fb-share-button" data-href="https://blockdegree.org" data-layout="button_count"
              data-size="large"><a target="_blank"
                href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fblockdegree.org%2F&amp;src=sdkpreparse"
                class="fb-xfbml-parse-ignore">FB-Share</a></div>
            <a class="twitter-share-button" href="https://twitter.com/intent/tweet?text=Hello%20world"
              data-size="large">
              Tweet</a>

            {{!-- Ideally we dont want to use a form for this, need to use asynchronous requests, something like what react does --}}
            <p id="social_wrap">
              Post on Socials:
            </p>
            <div>
              <button type="button" onclick="checkAuth()">Recheck-auths</button>
            </div>
            {{else}}
            <strong><span>Exam Status:</span></strong> <span class="redText"><strong>Fail</strong></span>
            {{/if}}
          </li>
        </ul>

      </div>
      <input class="ITR" type="button" value="Retake Exam"
        onclick="window.location.href='https://blockdegree.org/blockchain-basic-exam'" />
      {{else if exam.examAdvanced}}
      <div class="card py-3 px-5 mb-4">
        <h3 class="mb-3 exam-qns" style="color:#2073D4;">
          Blockchain Advanced Result
        </h3>
        <ul>
          <li style="display: flex;flex-direction:column">
            <strong><span>Attempts:</span></strong> {{{total}}}
            <strong><span>marks:</span></strong> {{{obtainedMarks}}}
            <strong><span>Percent:</span></strong> {{{percent}}} %
            <strong><span>Certificate Hash:</span></strong> {{{certificateHash}}}
            {{#if examStatus}}
            <strong><span>Exam Status:</span></strong> <span class="greenText"><strong>Pass</strong></span>
            <div class="fb-share-button" data-href="https://blockdegree.org" data-layout="button_count"
              data-size="large"><a target="_blank"
                href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fblockdegree.org%2F&amp;src=sdkpreparse"
                class="fb-xfbml-parse-ignore">FB-Share</a></div>
            <a class="twitter-share-button" href="https://twitter.com/intent/tweet?text=Hello%20world"
              data-size="large">
              Tweet</a>
            <div>
              <button type="button" onclick="downloadImage()">Download</button>
            </div>
            {{!-- Ideally we dont want to use a form for this, need to use asynchronous requests, something like what react does --}}
            <p id="social_wrap">
              Post on Socials:
            </p>
            <div>
              <button type="button" onclick="checkAuth()">Recheck-auths</button>
            </div>
            {{else}}
            <strong><span>Exam Status:</span></strong> <span class="redText"><strong>Fail</strong></span>
            {{/if}}
          </li>

        </ul>

      </div>
      <input class="ITR" type="button" value="Retake Exam"
        onclick="window.location.href='https://blockdegree.org/blockchain-advanced-exam'" />

      {{else if exam.examProfessional}}
      <div class="card py-3 px-5 mb-4">
        <h3 class="mb-3 exam-qns">
          Blockchasin Professional Result
        </h3>
        <ul>
          <li style="display: flex;flex-direction:column">
            <strong><span>Attempts:</span></strong> {{{total}}}
            <strong><span>marks:</span></strong> {{{obtainedMarks}}}
            <strong><span>Percent:</span></strong> {{{percent}}} %
            <strong><span>Certificate Hash:</span></strong> {{{certificateHash}}}
            {{#if examStatus}}
            <strong><span>Exam Status:</span></strong> <span class="greenText"><strong>Pass</strong></span>
            <div class="fb-share-button" data-href="https://blockdegree.org" data-layout="button_count"
              data-size="large"><a target="_blank"
                href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fblockdegree.org%2F&amp;src=sdkpreparse"
                class="fb-xfbml-parse-ignore">FB-Share</a></div>
            <a class="twitter-share-button"
              href="https://twitter.com/intent/tweet?text=Hey%20I%20just%20completed%this%20awesome%20course%20from%20%20blockdegree.org!!!"
              data-size="large">
              Tweet</a>
            <div>
              <button type="button" onclick="downloadImage()">Download</button>
            </div>
            {{!-- Ideally we dont want to use a form for this, need to use asynchronous requests, something like what react does --}}
            <p id="social_wrap">
              Post on Socials:
            </p>
            <div>
              <button type="button" onclick="checkAuth()">Recheck-auths</button>
            </div>
            {{else}}
            <strong><span>Exam Status:</span></strong> <span class="redText"><strong>Fail</strong></span>
            {{/if}}
          </li>

        </ul>

      </div>
      <input class="ITR" type="button" value="Retake Exam"
        onclick="window.location.href='https://blockdegree.org/blockchain-professional-exam'" />

      {{/if}}
      {{!--<ul>
          <li>
            <span><strong>we can shortly send your certifiacte in your Maild ID</strong></span>
          </li>
        </ul>--}}
      {{!-- <div class="text-right">
        <input id="exam-submit" type="submit" class="btn btn-primary py-2 mt-4 text-white" value="Submit your answers">
      </div> --}}
    </form>
  </div>

</div>
<script src="/js/exam.js"></script>

<script>


  window.onload = function () {
    checkAuth();
  }

  async function downloadImage() {
    console.log("inside download");
    let hash_input = document.getElementById("down_hash");
    hash_input.innerHTML = "Loading . . ."
    const hash = hash_input.value;
    var xhr = new XMLHttpRequest();
    xhr.open('POST', "/api/downloadCertificate", true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function () {
      if (this.status === 200) {
        hash_input.innerHTML = "ok"
        var filename = "";
        var disposition = xhr.getResponseHeader('Content-Disposition');
        if (disposition && disposition.indexOf('attachment') !== -1) {
          var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
          var matches = filenameRegex.exec(disposition);
          if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
        }
        var type = xhr.getResponseHeader('Content-Type');

        var blob = typeof File === 'function'
          ? new File([this.response], filename, { type: type })
          : new Blob([this.response], { type: type });
        if (typeof window.navigator.msSaveBlob !== 'undefined') {
          // IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
          window.navigator.msSaveBlob(blob, filename);
        } else {
          var URL = window.URL || window.webkitURL;
          var downloadUrl = URL.createObjectURL(blob);

          if (filename) {
            // use HTML5 a[download] attribute to specify filename
            var a = document.createElement("a");
            // safari doesn't support this yet
            if (typeof a.download === 'undefined') {
              window.location = downloadUrl;
            } else {
              a.href = downloadUrl;
              a.download = filename;
              document.body.appendChild(a);
              a.click();
            }
          } else {
            window.location = downloadUrl;
          }

          setTimeout(function () { URL.revokeObjectURL(downloadUrl); }, 100);
        }
      }
    };
    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    xhr.send($.param({ hash: {{certificateHash}} }));
  }

  function checkAuth() {
    console.log("called")
    $.ajax({
      url: "/api/getAuthStatus",
      method: "post",
      data: {},
      success: (result) => {
        // setting up a hidden html.
        // to be replaced by : pop-up modal for post, async call to /api/shareSocial and  
        let retHTML = '<form target="_blank" method="post" action="/api/shareOnTwitter">' +
          '                <input type="hidden" placeholder="Enter post status" name="msg" />' +
          '                <input type="hidden" />' +
          '              </form>'
        console.log(result)
        if (result.twitterAuth) {
          // signed in with twitter, show share button
          retHTML += '<div>' +
            '<button type="button" onclick="postOnTwitter()" >' +
            'Post On Twitter' +
            '</button>' +
            '</div>';
        } else {
          retHTML += '<div>' +
            '<button type="button" onclick="handleAuthTwitter()">Auth-Twitter</button>' +
            '</div>';
        }
        if (result.linkedinAuth) {
          retHTML += '<div>' +
            '<button type="button" onclick="postOnLinkedin()" >' +
            'Post On Linkedin' +
            '</button>' +
            '</div>';
        }
        else {
          retHTML += '<div>' +
            '<button type="button" onclick="handleAuthLinkedin()">Auth-Linkedin</button>' +
            '</div>';
        }
        document.getElementById("social_wrap").innerHTML = retHTML;
      }
    })
  }

  function postOnTwitter() {
    $.ajax({
      method: 'post',
      url: '/api/shareOnTwitter',
      data: { hash: "{{certificateHash}}" },
      success: (result) => {
        console.log(result);
        if (result.uploaded) {
          alert("Posted on Twitter!");
        }
        else {
          alert("Oops, error occured while posting!")
        }
      }
    });
  }

  function postOnLinkedin() {
    $.ajax({
      method: 'post',
      url: '/api/shareOnLinkedin',
      data: { hash: "{{certificateHash}}" },
      success: (result) => {
        console.log(result);
        if (result.uploaded) {
          alert("Posted on Linkedin!");
        }
        else {
          alert("Oops, error occured while posting!")
        }
      }
    });
  }

  function handleAuthTwitter() {
    let win = window.open("https://uat.blockdegree.org/auth/twitter?close=true", 'newwin', 'height=600px,width=600px');
  }

  function handleAuthLinkedin() {
    var win = window.open("https://uat.blockdegree.org/auth/linkedin?close=true", 'newwin', 'height=600px,width=600px');
  }
</script>